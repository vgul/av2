use Data::Dumper;

my $app_path = app->home;
app->debug('Configuration path [root]: \''.$app_path.'\'');

my %localconf;
if( -f "$app_path/local.conf" ) {
    %localconf = eval(`cat $app_path/local.conf`); 
    die $@ if $@;
}

app->debug('Dump localconf.conf: ' .Dumper \%localconf);

my $conf = {
    default_expiration => 60*60*24*14,
    how_many_dates_save=>8,

    ## how many bold dates in history
    bold_dates=>1,

    kiev   => { 
        prod_age=>1000, 
        match=>qr/^http:\/\/k116/, 
        name=>'Киев',
        sanbox_payment=>0,
        index_subtext=>'Два раза в Неделю.'  },
    dnepr  => { 
        prod_age=>700, 
        match=>qr/3010$/,          
        name=>'Днепр',
        sanbox_payment=>0,
        index_subtext=>'Один раз в Неделю.'  },
    odessa => { 
        prod_age=>700, 
        match=>qr/3020$/,
        name=>'Одесса',
        sanbox_payment=>0,
        index_subtext=>'Один раз в Неделю.'  },

};


sub cross_conf {
    my $origin = shift;
    my $to_add = shift;
    my @origin_keys;
    foreach my $k ( keys %$origin ) {
        push @origin_keys, $k;
        if( exists $to_add->{$k} ) {
            if( ref $origin->{$k} eq 'HASH' ) {
                cross_conf( $origin->{$k}, $to_add->{$k} );
            } else {
                $origin->{$k} = $to_add->{$k};
            }
        } 
    }

    foreach my $k ( keys %{ $to_add } ) {
        next if grep $k eq $_, @origin_keys;
        $origin->{$k} = $to_add->{$k};
    }
}

cross_conf( $conf, \%localconf );

$conf;

# vim: set expandtab softtabstop=4 tabstop=4 shiftwidth=4 filetype=perl syn=perl:
